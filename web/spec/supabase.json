{
	"id": 0,
	"name": "@supabase/supabase-js",
	"kind": 1,
	"kindString": "Project",
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 6,
			"name": "SupabaseClient",
			"kind": 128,
			"kindString": "Class",
			"flags": {},
			"comment": {
				"shortText": "Supabase Client.",
				"text": "An isomorphic Javascript client for interacting with Postgres.\n"
			},
			"children": [
				{
					"id": 7,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 61,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 8,
							"name": "new SupabaseClient",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {},
							"comment": {
								"shortText": "Create a new client for use in the browser."
							},
							"parameters": [
								{
									"id": 9,
									"name": "supabaseUrl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The unique Supabase URL which is supplied when you create a new project in your project dashboard."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10,
									"name": "supabaseKey",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The unique Supabase Key which is supplied when you create a new project in your project dashboard."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 11,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"id": 97,
										"name": "SupabaseClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 6,
								"name": "default"
							}
						}
					]
				},
				{
					"id": 12,
					"name": "auth",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"comment": {
						"shortText": "Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies."
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"name": "SupabaseAuthClient"
					}
				},
				{
					"id": 16,
					"name": "authUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 35,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 26,
					"name": "changedAccessToken",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 41,
							"character": 12
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 21,
					"name": "fetch",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 40,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 22,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 23,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 24,
											"name": "input",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInfo",
												"package": "typescript",
												"name": "RequestInfo"
											}
										},
										{
											"id": 25,
											"name": "init",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"qualifiedName": "RequestInit",
												"package": "typescript",
												"name": "RequestInit"
											}
										}
									],
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"qualifiedName": "Response",
												"package": "typescript",
												"name": "Response"
											}
										],
										"qualifiedName": "Promise",
										"package": "typescript",
										"name": "Promise"
									}
								}
							]
						}
					}
				},
				{
					"id": 18,
					"name": "functionsUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 28,
					"name": "headers",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 44,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 29,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"indexSignature": {
								"id": 30,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 31,
										"name": "key",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					}
				},
				{
					"id": 20,
					"name": "multiTab",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 39,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 19,
					"name": "realtime",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 38,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"qualifiedName": "RealtimeClient",
						"package": "@supabase/realtime-js",
						"name": "default"
					}
				},
				{
					"id": 15,
					"name": "realtimeUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 14,
					"name": "restUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13,
					"name": "schema",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 32,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 27,
					"name": "shouldThrowOnError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 42,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 17,
					"name": "storageUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 36,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33,
					"name": "supabaseKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 32,
					"name": "supabaseUrl",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 34,
					"name": "functions",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 106,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 35,
							"name": "functions",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Supabase Functions allows you to deploy and invoke edge functions."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "FunctionsClient",
								"package": "@supabase/functions-js",
								"name": "FunctionsClient"
							}
						}
					]
				},
				{
					"id": 36,
					"name": "storage",
					"kind": 262144,
					"kindString": "Accessor",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 113,
							"character": 6
						}
					],
					"getSignature": [
						{
							"id": 37,
							"name": "storage",
							"kind": 524288,
							"kindString": "Get signature",
							"flags": {},
							"comment": {
								"shortText": "Supabase Storage allows you to manage user-generated content, such as photos or videos."
							},
							"type": {
								"type": "reference",
								"qualifiedName": "SupabaseStorageClient",
								"package": "@supabase/storage-js",
								"name": "SupabaseStorageClient"
							}
						}
					]
				},
				{
					"id": 66,
					"name": "_closeSubscription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 191,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "_closeSubscription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 68,
									"name": "subscription",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RealtimeSubscription",
										"package": "@supabase/realtime-js",
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 69,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 70,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SupabaseClient.ts",
															"line": 193,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Error",
																"package": "typescript",
																"name": "Error"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														70
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 86,
					"name": "_getAuthHeaders",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 264,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 87,
							"name": "_getAuthHeaders",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "GenericObject"
							}
						}
					]
				},
				{
					"id": 92,
					"name": "_handleTokenChanged",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 306,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 93,
							"name": "_handleTokenChanged",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 94,
									"name": "event",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "AuthChangeEvent",
										"package": "@supabase/gotrue-js",
										"name": "AuthChangeEvent"
									}
								},
								{
									"id": 95,
									"name": "token",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 96,
									"name": "source",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "CLIENT"
											},
											{
												"type": "literal",
												"value": "STORAGE"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "_initPostgRESTClient",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 255,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "_initPostgRESTClient",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "reference",
								"qualifiedName": "PostgrestClient",
								"package": "@supabase/postgrest-js",
								"name": "default"
							}
						}
					]
				},
				{
					"id": 81,
					"name": "_initRealtimeClient",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 248,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "_initRealtimeClient",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 83,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"qualifiedName": "Options",
										"package": "@supabase/realtime-js",
										"name": "Options"
									}
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "RealtimeClient",
								"package": "@supabase/realtime-js",
								"name": "default"
							}
						}
					]
				},
				{
					"id": 78,
					"name": "_initSupabaseAuthClient",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 225,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 79,
							"name": "_initSupabaseAuthClient",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 80,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"id": 97,
										"name": "SupabaseClientOptions"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "SupabaseAuthClient"
							}
						}
					]
				},
				{
					"id": 90,
					"name": "_listenForAuthEvents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 299,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 91,
							"name": "_listenForAuthEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"qualifiedName": "Subscription",
										"package": "@supabase/gotrue-js",
										"name": "Subscription"
									}
								]
							}
						}
					]
				},
				{
					"id": 88,
					"name": "_listenForMultiTabEvents",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 272,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "_listenForMultiTabEvents",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				},
				{
					"id": 71,
					"name": "_unsubscribeSubscription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 206,
							"character": 10
						}
					],
					"signatures": [
						{
							"id": 72,
							"name": "_unsubscribeSubscription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 73,
									"name": "subscription",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"qualifiedName": "RealtimeSubscription",
										"package": "@supabase/realtime-js",
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 74,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 75,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SupabaseClient.ts",
															"line": 208,
															"character": 15
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Error",
																"package": "typescript",
																"name": "Error"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														75
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 38,
					"name": "from",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 122,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 39,
							"name": "from",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Perform a table operation."
							},
							"typeParameter": [
								{
									"id": 40,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 41,
									"name": "table",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The table name to operate on.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 40,
										"name": "T"
									}
								],
								"name": "SupabaseQueryBuilder"
							}
						}
					]
				},
				{
					"id": 76,
					"name": "getSubscriptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 221,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "getSubscriptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Returns an array of all your subscriptions."
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"qualifiedName": "RealtimeSubscription",
									"package": "@supabase/realtime-js",
									"name": "default"
								}
							}
						}
					]
				},
				{
					"id": 51,
					"name": "removeAllSubscriptions",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 159,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 52,
							"name": "removeAllSubscriptions",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Closes and removes all subscriptions and returns a list of removed\nsubscriptions and their errors."
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 53,
												"name": "__type",
												"kind": 65536,
												"kindString": "Type literal",
												"flags": {},
												"children": [
													{
														"id": 54,
														"name": "data",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/SupabaseClient.ts",
																"line": 160,
																"character": 6
															}
														],
														"type": {
															"type": "reflection",
															"declaration": {
																"id": 55,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 56,
																		"name": "subscription",
																		"kind": 1024,
																		"kindString": "Property",
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "src/SupabaseClient.ts",
																				"line": 160,
																				"character": 14
																			}
																		],
																		"type": {
																			"type": "reference",
																			"qualifiedName": "RealtimeSubscription",
																			"package": "@supabase/realtime-js",
																			"name": "default"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"kind": 1024,
																		"children": [
																			56
																		]
																	}
																]
															}
														}
													},
													{
														"id": 57,
														"name": "error",
														"kind": 1024,
														"kindString": "Property",
														"flags": {},
														"sources": [
															{
																"fileName": "src/SupabaseClient.ts",
																"line": 160,
																"character": 52
															}
														],
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": null
																},
																{
																	"type": "reference",
																	"qualifiedName": "Error",
																	"package": "typescript",
																	"name": "Error"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"kind": 1024,
														"children": [
															54,
															57
														]
													}
												]
											}
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 58,
					"name": "removeSubscription",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 179,
							"character": 8
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "removeSubscription",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Closes and removes a subscription and returns the number of open subscriptions."
							},
							"parameters": [
								{
									"id": 60,
									"name": "subscription",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The subscription you want to close and remove.\n"
									},
									"type": {
										"type": "reference",
										"qualifiedName": "RealtimeSubscription",
										"package": "@supabase/realtime-js",
										"name": "default"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 61,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 62,
													"name": "data",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SupabaseClient.ts",
															"line": 181,
															"character": 15
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 63,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 64,
																	"name": "openSubscriptions",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "src/SupabaseClient.ts",
																			"line": 181,
																			"character": 23
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"kind": 1024,
																	"children": [
																		64
																	]
																}
															]
														}
													}
												},
												{
													"id": 65,
													"name": "error",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"sources": [
														{
															"fileName": "src/SupabaseClient.ts",
															"line": 181,
															"character": 52
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"qualifiedName": "Error",
																"package": "typescript",
																"name": "Error"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														62,
														65
													]
												}
											]
										}
									}
								],
								"qualifiedName": "Promise",
								"package": "typescript",
								"name": "Promise"
							}
						}
					]
				},
				{
					"id": 42,
					"name": "rpc",
					"kind": 2048,
					"kindString": "Method",
					"flags": {},
					"sources": [
						{
							"fileName": "src/SupabaseClient.ts",
							"line": 143,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "rpc",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"shortText": "Perform a function call."
							},
							"typeParameter": [
								{
									"id": 44,
									"name": "T",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"parameters": [
								{
									"id": 45,
									"name": "fn",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"shortText": "The function name to call."
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 46,
									"name": "params",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"shortText": "The parameters to pass to the function call."
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 47,
									"name": "__namedParameters",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 48,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 50,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/SupabaseClient.ts",
															"line": 149,
															"character": 25
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "literal",
																"value": "exact"
															},
															{
																"type": "literal",
																"value": "planned"
															},
															{
																"type": "literal",
																"value": "estimated"
															}
														]
													}
												},
												{
													"id": 49,
													"name": "head",
													"kind": 1024,
													"kindString": "Property",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/SupabaseClient.ts",
															"line": 149,
															"character": 9
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"kind": 1024,
													"children": [
														50,
														49
													]
												}
											]
										}
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 44,
										"name": "T"
									}
								],
								"qualifiedName": "PostgrestFilterBuilder",
								"package": "@supabase/postgrest-js",
								"name": "default"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						7
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						12,
						16,
						26,
						21,
						18,
						28,
						20,
						19,
						15,
						14,
						13,
						27,
						17,
						33,
						32
					]
				},
				{
					"title": "Accessors",
					"kind": 262144,
					"children": [
						34,
						36
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						66,
						86,
						92,
						84,
						81,
						78,
						90,
						88,
						71,
						38,
						76,
						51,
						58,
						42
					]
				}
			],
			"sources": [
				{
					"fileName": "src/SupabaseClient.ts",
					"line": 26,
					"character": 21
				}
			]
		},
		{
			"id": 97,
			"name": "SupabaseClientOptions",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 98,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 101,
							"name": "autoRefreshToken",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Automatically refreshes the token for logged in users."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 24,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 104,
							"name": "detectSessionInUrl",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Detect a session from the URL. Used for OAuth login callbacks."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 107,
							"name": "fetch",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A custom `fetch` implementation."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 50,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "Fetch"
							}
						},
						{
							"id": 100,
							"name": "headers",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Optional headers for initializing the client."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"name": "GenericObject"
							}
						},
						{
							"id": 105,
							"name": "localStorage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A storage provider. Used to store the logged in session."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "localStorage"
								},
								"objectType": {
									"type": "reference",
									"name": "SupabaseAuthClientOptions"
								}
							}
						},
						{
							"id": 102,
							"name": "multiTab",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Allows to enable/disable multi-tab/window events"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 28,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 103,
							"name": "persistSession",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Whether to persist a logged in session to storage."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 32,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 106,
							"name": "realtime",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Options passed to the realtime-js instance"
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 45,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"qualifiedName": "Options",
								"package": "@supabase/realtime-js",
								"name": "RealtimeClientOptions"
							}
						},
						{
							"id": 99,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The Postgres schema which your tables belong to. Must be on the list of exposed schemas in Supabase. Defaults to 'public'."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 16,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 108,
							"name": "shouldThrowOnError",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "Throw errors, instead of returning them."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								101,
								104,
								107,
								100,
								105,
								102,
								103,
								106,
								99,
								108
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 12,
							"character": 36
						}
					]
				}
			}
		},
		{
			"id": 109,
			"name": "SupabaseRealtimePayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "src/lib/types.ts",
					"line": 58,
					"character": 12
				}
			],
			"typeParameter": [
				{
					"id": 118,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 110,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"children": [
						{
							"id": 111,
							"name": "commit_timestamp",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 117,
							"name": "errors",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 112,
							"name": "eventType",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "INSERT"
									},
									{
										"type": "literal",
										"value": "UPDATE"
									},
									{
										"type": "literal",
										"value": "DELETE"
									}
								]
							}
						},
						{
							"id": 115,
							"name": "new",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The new record. Present for 'INSERT' and 'UPDATE' events."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 118,
								"name": "T"
							}
						},
						{
							"id": 116,
							"name": "old",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"shortText": "The previous record. Present for 'UPDATE' and 'DELETE' events."
							},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"id": 118,
								"name": "T"
							}
						},
						{
							"id": 113,
							"name": "schema",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 114,
							"name": "table",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/lib/types.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								111,
								117,
								112,
								115,
								116,
								113,
								114
							]
						}
					],
					"sources": [
						{
							"fileName": "src/lib/types.ts",
							"line": 58,
							"character": 41
						}
					]
				}
			}
		},
		{
			"id": 1,
			"name": "createClient",
			"kind": 64,
			"kindString": "Function",
			"flags": {},
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 16,
					"character": 6
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "createClient",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "Creates a new Supabase Client."
					},
					"parameters": [
						{
							"id": 3,
							"name": "supabaseUrl",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "supabaseKey",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "options",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"id": 97,
								"name": "SupabaseClientOptions"
							}
						}
					],
					"type": {
						"type": "reference",
						"id": 6,
						"name": "default"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				6
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				97,
				109
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1
			]
		}
	],
	"sources": [
		{
			"fileName": "src/index.ts",
			"line": 1,
			"character": 0
		}
	]
}